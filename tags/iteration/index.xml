<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Iteration on 404EngineerNotFound</title><link>https://deepskandpal.github.io/tags/iteration/</link><description>Recent content in Iteration on 404EngineerNotFound</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 29 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://deepskandpal.github.io/tags/iteration/index.xml" rel="self" type="application/rss+xml"/><item><title>Count And Say</title><link>https://deepskandpal.github.io/dsa-log/count-and-say/</link><pubDate>Mon, 29 Jul 2024 00:00:00 +0000</pubDate><guid>https://deepskandpal.github.io/dsa-log/count-and-say/</guid><description>&lt;h2 id="problem-description">Problem Description&lt;/h2>
&lt;p>&lt;a href="https://colab.research.google.com/drive/1udH4eyb9bToLC_ZPPaK-n3T-jPdbAANw#scrollTo=pD7bP8UR5oiP">rough nb&lt;/a>&lt;/p>
&lt;p>The count-and-say sequence is a sequence of digit strings defined by the recursive formula:&lt;/p>
&lt;ul>
&lt;li>&lt;code>countAndSay(1) = &amp;quot;1&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>countAndSay(n)&lt;/code> is the way you would &amp;ldquo;say&amp;rdquo; the digit string from &lt;code>countAndSay(n-1)&lt;/code>, which is then converted into a new digit string.&lt;/li>
&lt;/ul>
&lt;p>To determine how you &amp;ldquo;say&amp;rdquo; a digit string, split it into the minimal number of substrings such that each substring contains exactly one unique digit. Then for each substring, say the number of digits, then say the digit. Finally, concatenate every said digit.&lt;/p></description></item></channel></rss>